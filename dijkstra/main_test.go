package dijkstra

import "testing"

var tests = []struct {
	name     string
	nodes    []Node
	edges    []Edge
	src      Node
	dst      Node
	expected []Edge
}{
	// 1 --1-- 2
	{
		"simple graph",
		[]Node{1, 2},
		[]Edge{{1, 2, 1}},
		1,
		2,
		[]Edge{{1, 2, 1}},
	},
	// n01 --2-- n02 --3-- n03 --1-- n04
	// |      /  |      /  |      /  |
	// 3    1    1    2    2    3    2
	// |  /      |  /      |  /      |
	// n05 --5-- n06 --3-- n07 --2-- n08
	// |      /  |  \      |      /  |
	// 2    2    1    1    2    5    1
	// |  /      |      \  |  /      |
	// n09 --6-- n10 --1-- n11 --1-- n12
	// |  \      |      /  |      /  |
	// 1    1    3    1    2    5    2
	// |      \  |  /      |  /      |
	// n13 --3-- n14 --2-- n15 --4-- n16
	{
		"complicated graph",
		[]Node{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16},
		[]Edge{
			{1, 2, 2},
			{1, 5, 3},
			{2, 3, 3},
			{2, 5, 1},
			{2, 6, 1},
			{3, 4, 1},
			{3, 6, 2},
			{3, 7, 2},
			{4, 7, 3},
			{4, 8, 2},
			{5, 6, 5},
			{5, 9, 2},
			{6, 7, 3},
			{6, 9, 2},
			{6, 10, 1},
			{6, 11, 1},
			{7, 8, 2},
			{7, 11, 2},
			{8, 11, 5},
			{8, 12, 1},
			{9, 10, 6},
			{9, 13, 1},
			{9, 14, 1},
			{10, 11, 1},
			{10, 14, 3},
			{11, 12, 1},
			{11, 14, 1},
			{11, 15, 2},
			{12, 15, 5},
			{12, 16, 2},
			{13, 14, 3},
			{14, 15, 2},
			{15, 16, 4},
		},
		13,
		4,
		[]Edge{
			{9, 13, 1},
			{6, 9, 2},
			{3, 6, 2},
			{3, 4, 1},
		},
	},
	{
		"complicated graph 2",
		[]Node{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16},
		[]Edge{
			{1, 2, 2},
			{1, 5, 3},
			{2, 3, 3},
			{2, 5, 1},
			{2, 6, 1},
			{3, 4, 1},
			{3, 6, 2},
			{3, 7, 2},
			{4, 7, 3},
			{4, 8, 2},
			{5, 6, 5},
			{5, 9, 2},
			{6, 7, 3},
			{6, 9, 2},
			{6, 10, 1},
			{6, 11, 1},
			{7, 8, 2},
			{7, 11, 2},
			{8, 11, 5},
			{8, 12, 1},
			{9, 10, 6},
			{9, 13, 1},
			{9, 14, 1},
			{10, 11, 1},
			{10, 14, 3},
			{11, 12, 1},
			{11, 14, 1},
			{11, 15, 2},
			{12, 15, 5},
			{12, 16, 2},
			{13, 14, 3},
			{14, 15, 2},
			{15, 16, 4},
		},
		13,
		16,
		[]Edge{
			{9, 13, 1},
			{9, 14, 1},
			{11, 14, 1},
			{11, 12, 1},
			{12, 16, 2},
		},
	},
}

func TestDijkstra(t *testing.T) {
	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			actual := Dijkstra(test.nodes, test.edges, test.src, test.dst)
			if !equal(actual, test.expected) {
				t.Errorf("actual = %#v; expected =  %#v", actual, test.expected)
			}
		})
	}
}

func equal(a, b []Edge) bool {
	if len(a) != len(b) {
		return false
	}
	for i, v := range a {
		if v != b[i] {
			return false
		}
	}
	return true
}
